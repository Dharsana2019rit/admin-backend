//Login.cs 
using System.ComponentModel.DataAnnotations;

namespace cafemanagement.Models
{
    public class Login
    {
        [Key]
        public int LoginId { get; set; }

        [Required]
        [EmailAddress]
        public string EmailId { get; set; }

        [Required]
        public string Password { get; set; }

        [Required]
        public string Role { get; set; }
    }
}

// Menu.cs model
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;

namespace cafemanagement.Models
{
    public class Menu
    {
        [Key]
        public int MenuId { get; set; }

        [Required]
        public string Category { get; set; }

        public ICollection<MenuItem> MenuItems { get; set; }
    }
}

// MenuItem.cs model
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace cafemanagement.Models
{
    public class MenuItem
    {
        [Key]
        public int MenuItemId { get; set; }

        [Required]
        public string Name { get; set; }

        [Required]
        [Column(TypeName = "decimal(18, 2)")]
        public decimal Price { get; set; }

        [Required]
        public int? MenuId { get; set; }

        [ForeignKey("MenuId")]
        public Menu? Menu { get; set; }
    }
}

// Order.cs
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace cafemanagement.Models
{
    public class Order
    {
        [Key]
        public int OrderId { get; set; }

        [Required]
        public DateTime OrderDate { get; set; }

        [Required]
        public string ItemName { get; set; }

        [Required]
        public decimal Price { get; set; }

        [Required]
        public int Quantity { get; set; }

    }
}

//tablebooking.cs
using System;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;

namespace cafemanagement.Models
{
    public class TableBooking
    {
        [Key]
        public int TableBookingId { get; set; }

        [Required]
        public DateTime BookingDateTime { get; set; }

        [Required]
        public int NumberOfGuests { get; set; }

        public int TableNumber { get; set; } // Add new property for table number

        public bool IsBooked { get; set; }

        public int? CustomerId { get; set; }

        [ForeignKey("CustomerId")]
        public Customer? Customer { get; set; } // Make Customer property nullable
    }
}
